package tc_tests;
unit LocationUnit;

import tc_tests.facts.Location;

query getLocations(String x)
    $x: /locations[thing==x]
end

query isContainedIn( String x, String y )
    /locations[thing := x, location := y]
    or
    (/locations[z := thing, location := y] and isContainedIn(x, z;))
end


// // 1) NOT WORKING unbound query, accessing singletonstore BEFORE query
// rule "Location Inference"
// no-loop
// when
//     $go: /go[this=="go1"]
//     isContainedIn($x, $y;)
//     (not /locations[thing== $x, location== $y, inferred==false])
// then
//     System.out.println($go);
//     System.out.println("Inferred: " + $x + " IN " + $y);
//     Location loc = new Location($x, $y, true);
//     locations.addLogical(loc);
// end



// // 2) WORKING completely unbound query
// rule "Location Inference"
// no-loop
// when
//     isContainedIn($x, $y;)
//     (not /locations[thing== $x, location== $y, inferred==false])
// then
//     System.out.println("Inferred: " + $x + " IN " + $y);
//     Location loc = new Location($x, $y, true);
//     locations.addLogical(loc);
// end



// // 3) WORKING accessing global and bind it to first query arg
// rule "Location Inference"
// no-loop
// when
//     $x: /testGlobal
//     isContainedIn($x, $y;)
//     (not /locations[thing== $x, location== $y, inferred==false])
// then
//     System.out.println("Inferred: " + $x + " IN " + $y);
//     Location loc = new Location($x, $y, true);
//     locations.addLogical(loc);
// end



// // 4) WORKING extra rule using insert every location fact in WM, then use "traditional" syntax
// rule "insert locs"
// when
//     $x: Location() from locations
// then
//     insert($x);
// end
//
// rule "Location Inference"
// no-loop
// when
//     $x: Location(inferred==false)
//     isContainedIn($x.thing, $y;)
//     (not /locations[thing== $x.thing, location== $y, inferred==false])
// then
//     System.out.println("Inferred: " + $x.thing + " IN " + $y);
//     Location loc = new Location($x.thing, $y, true);
//     locations.addLogical(loc);
// end



// // 5) WORKING unbound query, accessing singletonstore AFTER query
// rule "Location Inference"
// no-loop
// when
//     isContainedIn($x, $y;)
//     $go: /go[this=="go1"]
//     (not /locations[thing== $x, location== $y, inferred==false])
// then
//     System.out.println($go);
//     System.out.println("Inferred: " + $x + " IN " + $y);
//     Location loc = new Location($x, $y, true);
//     locations.addLogical(loc);
// end